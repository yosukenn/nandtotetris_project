// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 512 rows (indexed 0..511, top to bottom)
 * of 256 pixels each (indexed 0..255, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
    static int screenBegin;
    static boolean color;

    /** Initializes the Screen. */
    function void init() {
        let screenBegin = 16384; // RAM[16384] <= screen maped address <= RAM[24575]
        let color = true;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
        var int i;
        let i = 0;
        while (i < 8192) {
            do Memory.poke(screenBegin + i, 0);
        }
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
        let color = b;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
        var int targetRamAddress;
        var int targetBit;
        var int n;
        var int i;
        var int peeked;

        let targetRamAddress = screenBegin + (y * 32) + (x / 16);
        let targetBit = x - (x / 16);
        
        let n = 1;
        if (~(targetBit = 15)) {
            let i = 15 - targetBit - 1;

            while (i > 0) {
                let n + 2; // left shift
                let i = i - 1;
            }
        }

        let peeked = Memory.peek(targetRamAddress);
        do Memory.poke(targetRamAddress, peeked & n);

        return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
    }
}
